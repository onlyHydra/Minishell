name: Auto Manage Commit Labels

on:
  push:
    branches:
      - '**'

jobs:
  manage-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Listen for First Commit and Update Labels
        env:
          GH_TOKEN: ${{ secrets.GH_PROJECTS_PAT }}
        run: |
          # Get the latest commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)

          # Issue number from commit message (this assumes the issue number is included in the commit message)
          ISSUE_NUMBER=$(echo "$COMMIT_MSG" | grep -oP "#\d+" | head -n 1)

          # Add 'help wanted' label and notify if commit message contains '[HELP]'
          if [[ "$COMMIT_MSG" == *"[HELP]"* ]]; then
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -d "[\"help wanted\"]" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/labels"

            # Notify collaborators
            COMMENT_BODY="This issue has been tagged with 'help wanted'. Please take a look."
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -d "{\"body\": \"$COMMENT_BODY\"}" \
              https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments
          elif [[ "$COMMIT_MSG" == *"[FINISHED]"* ]]; then
            # Add 'in review' label and move to 'In Review' column in project
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -d "[\"in review\"]" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/labels"

            # Move the issue to the 'In Review' column
            curl -X POST -H "Authorization: bearer $GH_TOKEN" \
              -d '{"query": "mutation { addProjectV2ItemById(input: { projectId: \"'$PROJECT_ID'\", contentId: \"'$ISSUE_NUMBER'\" }) { projectV2Item { id content { ... on Issue { title url } } } } }"}' \
              https://api.github.com/graphql

            # Create a pull request automatically
            PR_TITLE="Pull request for issue #$ISSUE_NUMBER"
            PR_BODY="This pull request is created for the issue: $ISSUE_NUMBER."
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -d "{\"title\": \"$PR_TITLE\", \"body\": \"$PR_BODY\", \"head\": \"$BRANCH_NAME\", \"base\": \"developer\"}" \
              https://api.github.com/repos/${{ github.repository }}/pulls
          fi
